name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x 
    
    - name: dotnet publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/ApiCoreApi
      
    - name: dotnet teste
      run: dotnet test
      
    - uses: microsoft/variable-substitution@v1
      with:
        files: '${{env.DOTNET_ROOT}}/ApiCoreApi/appsettings.json'
      env:
        ConnectionStrings.DefaultConnection: ${{ secrets.STRING_CNN }}
        AppSettings.Secret: ${{ secrets.TOKEN_SECRET }}
        DropBoxAccessToken: ${{ secrets.DROPBOX_TOKEN }}
        KissLog.OrganizationId: ${{ secrets.KISSLOG_ORGANIZATION }}
        KissLog.ApplicationId: ${{ secrets.KISSLOG_APPLICATION }}

    - name: Azure Login
      uses: azure/login@v1.1
      with:
       creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v1
      with:
        app-name: "ApiCoreApi"
        slot-name: "production"
        package: ${{env.DOTNET_ROOT}}/ApiCoreApi

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        New-Item -Path sonar/scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path sonar/scanner
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: pwsh
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"DonPSantos_ApiCore" /o:"donpsantos" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet build --configuration Release
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
